type Query{
    chatbot_tl_questions: Data
    chatbot_en_questions: Data
}


type Mutation{
    chatbot_ask(question: String!): MessageChatbot
    chatbot_create(name: String,
    locale: String, data: [ChatbotDataInput]): Chatbot
    chatbot_tl_train(question: String!, answer: String!): MessageChatbot
    chatbot_en_train(question: String!, answer: String!): MessageChatbot
    chatbot_tl_delete(question: String!): MessageDelete
    chatbot_en_delete(question: String!): MessageDelete
}

type Subscription {
    chatbot_convo: MessageChatbot
}

type MessageDelete{
    message: String
}

type MessageChatbot{
    answer: String
}

type Data{
    data: [String]
}

type Chatbot{
    name: String
    locale: String
    data: [ChatbotData]
}

type ChatbotData{
    intent: String
    utterances: [ChatbotUtterance]
    answers: [ChatbotAnswer],
}

type ChatbotAnswer{
    answer: String
}

type ChatbotUtterance{
    utterance: String
}

input ChatbotDataInput{
    intent: String
    utterances: [String]
    answers: [String],
}

input ChatbotAnswerInput{
    answer: String
}

input ChatbotUtteranceInput{
    utterance: String
}